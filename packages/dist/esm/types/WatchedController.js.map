{"version":3,"file":"WatchedController.js","sourceRoot":"","sources":["../../../redux-controller-middleware/src/types/WatchedController.ts"],"names":[],"mappings":"","sourcesContent":["import { Action } from './Action.js';\nimport { Controller } from './Controller.js';\n\nexport type WatchedController<TController extends Controller> = {\n  [methodName in keyof TController]: TController[methodName] extends (mayBeAction: infer MayBeAction) => any\n    ? MayBeAction extends Action<infer Payload>\n      ? Payload extends undefined\n        ? () => Action\n        : (payload: Payload) => Action<Payload>\n      : (...params: Parameters<TController[methodName]>) => Action\n    : TController[methodName];\n};\n"]}