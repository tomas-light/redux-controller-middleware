{"version":3,"file":"tryToFindDependencyContainer.js","sourceRoot":"","sources":["../../redux-controller-middleware/src/tryToFindDependencyContainer.ts"],"names":[],"mappings":"AACA,OAAO,EAAe,qBAAqB,EAAE,MAAM,kBAAkB,CAAC;AAEtE,MAAM,UAAU,4BAA4B,CAC1C,MAAuB,EACvB,SAA2D;IAE3D,IAAI,QAAQ,GAAmC,SAAS,CAAC;IACzD,IAAI,SAAS,EAAE,CAAC;QACd,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE,CAAC;YACpC,QAAQ,GAAG,SAAS,EAAE,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,QAAQ,GAAG,SAAS,CAAC;QACvB,CAAC;IACH,CAAC;IAED,sCAAsC;IACtC,IAAI,qBAAqB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;IAC9B,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import type { DependencyResolver } from 'cheap-di';\nimport { type Action, isActionWithContainer } from './types/index.js';\n\nexport function tryToFindDependencyContainer<Payload = undefined>(\n  action: Action<Payload>,\n  container?: DependencyResolver | (() => DependencyResolver)\n) {\n  let resolver: DependencyResolver | undefined = undefined;\n  if (container) {\n    if (typeof container === 'function') {\n      resolver = container();\n    } else {\n      resolver = container;\n    }\n  }\n\n  // scope container has higher priority\n  if (isActionWithContainer(action)) {\n    resolver = action.container;\n  }\n\n  return resolver;\n}\n"]}