{"version":3,"file":"createStoreSliceReducer.js","sourceRoot":"","sources":["../../redux-controller-middleware/src/createStoreSliceReducer.ts"],"names":[],"mappings":"AAGA,MAAM,UAAU,uBAAuB,CAAa,YAAwB,EAAE,gBAAuC;IACnH,MAAM,iBAAiB,GAAqD,CAAC,KAAK,GAAG,YAAY,EAAE,MAAM,EAAE,EAAE;QAC3G,IAAI,MAAM,CAAC,IAAI,KAAK,gBAAgB,EAAE,CAAC;YACrC,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE,CAAC;YACvC,OAAO;gBACL,GAAG,KAAK;gBACR,GAAG,MAAM,CAAC,OAAO;aAClB,CAAC;QACJ,CAAC;QAED,OAAO;YACL,GAAG,KAAK;SACT,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,iBAAiB,CAAC;AAC3B,CAAC","sourcesContent":["import { Reducer, UnknownAction } from 'redux';\nimport { Action } from './types/index.js';\n\nexport function createStoreSliceReducer<StoreSlice>(initialStore: StoreSlice, updateActionType: UnknownAction['type']) {\n  const storeSliceReducer: Reducer<StoreSlice, Action<Partial<StoreSlice>>> = (store = initialStore, action) => {\n    if (action.type !== updateActionType) {\n      return store;\n    }\n\n    if (typeof action.payload === 'object') {\n      return {\n        ...store,\n        ...action.payload,\n      };\n    }\n\n    return {\n      ...store,\n    };\n  };\n\n  return storeSliceReducer;\n}\n"]}