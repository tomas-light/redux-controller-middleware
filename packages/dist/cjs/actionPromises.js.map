{"version":3,"file":"actionPromises.js","sourceRoot":"","sources":["../../redux-controller-middleware/src/actionPromises.ts"],"names":[],"mappings":";;;AAEa,QAAA,cAAc,GAAG;IAC5B,GAAG,EAAE,IAAI,GAAG,EAGT;IAEH,GAAG,EAAE,CAAC,MAAqB,EAAE,EAAE;QAC7B,IAAI,SAAS,GAAG,sBAAc,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,SAAS,GAAG,EAAE,CAAC;YACf,sBAAc,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC;QAED,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;YACnC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,EAAE,CAAC,MAAqB,EAAE,EAAE;QACpC,MAAM,SAAS,GAAG,sBAAc,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtD,SAAS,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE,EAAE;YACpC,cAAc,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,sBAAc,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;CACF,CAAC","sourcesContent":["import type { UnknownAction } from 'redux';\n\nexport const actionPromises = {\n  map: new Map<\n    string, // action type\n    Array<() => void> // promise resolvers, that should be resolved after action is processed\n  >(),\n\n  add: (action: UnknownAction) => {\n    let resolvers = actionPromises.map.get(action.type);\n    if (!resolvers) {\n      resolvers = [];\n      actionPromises.map.set(action.type, resolvers);\n    }\n\n    return new Promise<void>((resolve) => {\n      resolvers?.push(resolve);\n    });\n  },\n\n  resolveAll: (action: UnknownAction) => {\n    const resolvers = actionPromises.map.get(action.type);\n    resolvers?.forEach((resolvePromise) => {\n      resolvePromise();\n    });\n    actionPromises.map.delete(action.type);\n  },\n};\n"]}