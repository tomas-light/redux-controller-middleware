{"version":3,"file":"ControllerConstructor.js","sourceRoot":"","sources":["../../../redux-controller-middleware/src/types/ControllerConstructor.ts"],"names":[],"mappings":"","sourcesContent":["import { Middleware } from '../middleware/Middleware.js';\nimport { Controller } from './Controller.js';\n\nexport interface ControllerConstructor<State extends {} = {}> {\n  new (middlewareAPI: Middleware, ...args: any[]): Controller<State>;\n}\n\nexport type InferConstructorResult<TConstructor> = TConstructor extends ControllerConstructor\n  ? TConstructor extends new (middlewareAPI: Middleware, ...args: any[]) => infer Result\n    ? Result\n    : never\n  : never;\n"]}