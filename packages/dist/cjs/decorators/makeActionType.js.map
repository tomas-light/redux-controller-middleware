{"version":3,"file":"makeActionType.js","sourceRoot":"","sources":["../../../redux-controller-middleware/src/decorators/makeActionType.ts"],"names":[],"mappings":";;;AAAA;;;;KAIK;AACL,SAAgB,cAAc,CAAC,UAI9B;IACC,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC;IAE9D,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,cAAc,EAAE,CAAC;QACnB,MAAM,cAAc,GAAG,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAChE,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IAC7E,CAAC;IAED,MAAM,IAAI,GAAG,UAAU,IAAI,EAAE,CAAC;IAC9B,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAEjD,OAAO,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC;AACnC,CAAC;AAjBD,wCAiBC","sourcesContent":["/**\n * @example\n * makeActionType('UserController', 'load', '0123') // 'User_load__0123'\n * makeActionType(undefined, 'load', '457') // 'load__457'\n * */\nexport function makeActionType(parameters: {\n  controllerName?: string | undefined;\n  methodName: string;\n  uniqueSalt?: string;\n}) {\n  const { controllerName, methodName, uniqueSalt } = parameters;\n\n  let prefix = '';\n  if (controllerName) {\n    const simplifiedName = controllerName.replace('Controller', '');\n    prefix = `${simplifiedName[0].toLowerCase() + simplifiedName.slice(1)} / `;\n  }\n\n  const name = methodName ?? '';\n  const salt = uniqueSalt ? `  ${uniqueSalt}` : '';\n\n  return `${prefix}${name}${salt}`;\n}\n"]}