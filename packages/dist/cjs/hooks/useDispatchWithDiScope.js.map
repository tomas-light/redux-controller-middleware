{"version":3,"file":"useDispatchWithDiScope.js","sourceRoot":"","sources":["../../../redux-controller-middleware/src/hooks/useDispatchWithDiScope.ts"],"names":[],"mappings":";;;AAAA,mDAA8C;AAC9C,iCAAoC;AACpC,6CAA0C;AAC1C,uEAAiE;AAEjE,qEAAqE;AACrE,SAAgB,sBAAsB;IACpC,MAAM,QAAQ,GAAG,IAAA,yBAAW,GAAE,CAAC;IAC/B,MAAM,SAAS,GAAG,IAAA,6BAAY,GAAE,CAAC;IAEjC,MAAM,0BAA0B,GAAG,IAAA,mBAAW,EAC5C,CAAC,MAAM,EAAE,EAAE;QACT,MAAM,SAAS,GAAG,IAAA,8CAAoB,EAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC1D,OAAO,QAAQ,CAAC,SAAS,CAAQ,CAAC;IACpC,CAAC,EACD,CAAC,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,CAChC,CAAC;IAEF,OAAO,0BAA0B,CAAC;AACpC,CAAC;AAbD,wDAaC","sourcesContent":["import { useDiContext } from 'cheap-di-react';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContainerToAction } from './addContainerToAction.js';\n\n/** Warning! it is experimental hook, we don't recommend to use it */\nexport function useDispatchWithDiScope() {\n  const dispatch = useDispatch();\n  const diContext = useDiContext();\n\n  const dispatchWithContainerScope = useCallback<typeof dispatch>(\n    (action) => {\n      const newAction = addContainerToAction(action, diContext);\n      return dispatch(newAction) as any;\n    },\n    [dispatch, diContext.container]\n  );\n\n  return dispatchWithContainerScope;\n}\n"]}